accessible: true
author: Yakoub J, Rucquoy A
categories:
- module3
context: |-
    In this task, you have to implement the map / filter functions of the following class :

    .. code-block:: java

        public class Cons {
            // the item inside this list node
            public int v;
            // The next element, null if nothing
            public Cons next;
            // creates a new Cons that applies function f on all elements
            public Cons map(F f) {
                // TODO by student
            }
            // creates a new Cons with all elements that matches predicate p
            public Cons filter(P p) {
                // TODO by student
            }
            // Constructor
            public Cons(int v, Cons next) {
                this.v = v;
                this.next = next;
            }
        }

    Here are the interfaces for the object parameter for filter/map

    .. code-block:: java

        interface F {
            int apply(int v);
        }

        interface P {
            boolean filter(int v);
        }

    ( You can find all the required files here :  Cons_ , Function_ , Predicate_ )

    .. _Cons: /course/LEPL1402/Generics/Cons.java
    .. _Function: /course/LEPL1402/Generics/F.java
    .. _Predicate: /course/LEPL1402/Generics/P.java
environment: java8scala
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    time: '30'
    output: '2'
name: '[Module 3] Generics 1'
network_grading: false
order: 19
problems:
    map:
        type: code
        language: java
        name: ''
        header: 'Paste here the **body** of your ``map`` method :'
        default: ''
    filter:
        type: code
        header: 'Paste here the **body** of your ``filter`` method :'
        language: java
        name: ''
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0

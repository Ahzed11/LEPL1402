accessible: true
author: Bastin J, Piron H
categories:
- module2
context: Multiple choice questions about space complexity
environment: mcq
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    output: '2'
    memory: '100'
    time: '30'
name: '[Module 2] Space Complexity MCQ'
network_grading: false
order: 8
problems:
    mcq1:
        choices:
        -   valid: true
            text: :math:`\Theta(1)`
        -   text: :math:`\Theta(i)`
        -   text: :math:`\Theta(j)`
        -   text: :math:`\Theta(i*j)`
        header: |+
            What is the space complexity of this method?

            .. code-block:: java

                public static int multiply(int i, int j){
                    return i*j;
                }








        limit: 0
        type: multiple_choice
        name: Basic Method
    mcq2:
        choices:
        -   text: :math:`\Theta(n)`
            valid: true
        -   text: :math:`\mathcal{O}(1)`
        -   text: :math:`\mathcal{O}(n)`
        -   text: :math:`\Theta(1)`
        header: |+
            What is the space complexity of this method? (where :math:`n` is the size of the array)

            .. code-block:: java

                public static int maximum(int[] a){
                    int maxi=a[0];
                    for(int i = 0 ; i < a.length ; i++)
                        Math.max(maxi, a[i] );
                    return maxi;
                }



        limit: 0
        type: multiple_choice
        name: Max Method
    mcq3:
        choices:
        -   text: :math:`\Theta(square)`
            valid: true
        -   text: :math:`\Theta(1)`
        -   text: :math:`\mathcal{O}(square)`
        -   text: :math:`\mathcal{O}(1)`
        type: multiple_choice
        limit: 0
        name: Array of square
        header: |+
            What is the space complexity of this method?

            .. code-block:: java

                public static int[] squareArray(int square){
                    int[] result = new int[square+1];
                    for(int i = 0 ; i <= square;i++){
                        result[i]= i*i;
                    }
                    return result;
                }


    mcq4:
        choices:
        -   text: :math:`\Theta(n*m)`
            valid: true
        -   text: :math:`\Theta(n)`
        -   text: :math:`\Theta(m)`
        -   text: :math:`\mathcal{O}(n)`
        -   text: :math:`\mathcal{O}(n*m)`
        -   text: :math:`\mathcal{O}(m)`
        type: multiple_choice
        header: |-
            What is the space complexity of this method?

            .. code-block:: java

                public static int[][] multiplicationTable(int n, int m) {
                    int[][] table = new int[n][m];
                    for (int i = 0; i < n; i++) {
                        for (int j = 0; j < m; j++) {
                            table[i][j] = (i + 1) * (j + 1);
                        }
                    }
                    return table;
                }
        limit: 0
        name: Multiplication table
    mcq5:
        header: The time complexity of an algorithm is :math:`\Theta(n^2)` , what
            is the maximum space complexity of this program?
        name: Space vs Time
        type: multiple_choice
        choices:
        -   text: :math:`\Theta(n^2)`
            valid: true
        -   text: :math:`\Theta(1)`
        -   text: :math:`\Theta(n)`
        -   text: :math:`\Theta(n)`
        -   text: :math:`\Theta(n^2)`
        -   text: It can be infinite
        success_message: The space complexity cannot be higher than the time complexity!
        limit: 0
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0

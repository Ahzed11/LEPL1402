author: "Yakoub J, Rucquoy A"
name: '[TESTABLE] PostScript Interpreter [group]'
accessible: true
context: |-
    You are asked to write a mini-PostScript interpreter as described in the *pdf* ( Mission_ ) of the mission. Precisely, you must implement the following interface :

    .. code-block:: java

        public interface InterpreterInterface {
            /**
             * @pre: 'instructions' is a valid chain of PostScript instructions
             * @post: returns a String representing the state of the stack when a 'pstack' instruction is encountered.
             *    If several 'pstack' instructions are present in the chain, a concatenation of the corresponding states (when 'pstack' is encountered) must be returned, separated by whitespaces.
             *    If several elements are still on the stack, separate them with whitespaces.
             *    If there is no element on the stack or no 'pstack' instruction, return the empty string ("").
             */
            public String interpret(String instructions);
        }

    Don't forget to throw the different possible exceptions : EmptyStackException, ArithmeticException

    Note that [group] means that only one student must submit the code for the entire group.

    .. _Mission: /course/LEPL1402/PostScript/mission.pdf

problems:
    student_code:
        type: "code"
        language: java
        header: |-
            Paste here the **body** of your Interpreter class:

environment: java8scala

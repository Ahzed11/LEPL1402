accessible: true
author: Bastin J, Piron H
categories:
- module2
context: |-
    In this exercise, the questions will be about the bubble sort algorithm, its complexities and invariant.

    Here its implementation in java:

    .. code-block:: java

        public static void bubbleSort(Comparable[] array){
            int n = array.length;
            Comparable temp = 0;
            for(int i=0; i < n; i++){
                for(int j=1; j < (n-i); j++){
                    if(array[j-1].compareTo(array[j])>0){
                        //swap elements
                        temp = array[j-1];
                        array[j-1] = array[j];
                        array[j] = temp;
                    }
                }
            }
        }
environment: mcq
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    time: '30'
    output: '2'
name: '[Module 2] Bubble Sort Invariant (MCQ)'
network_grading: false
order: 14
problems:
    complexity:
        header: What is the most precise **time** complexity of this algorithm? (:math:`n`
            is the size of the array)
        choices:
        -   text: :math:`\Theta(n^2)`
            valid: true
        -   text: :math:`\Theta(nlog(n))`
        -   text: :math:`\mathcal{O}(n^2)`
        -   text: :math:`\mathcal{O}(nlog(n))`
        limit: 0
        name: Time Complexity
        type: multiple_choice
    space:
        choices:
        -   text: :math:`\Theta(n^2)`
        -   valid: true
            text: :math:`\Theta(n)`
        -   text: :math:`\Theta(n^3)`
        -   text: :math:`\Theta(nlog(n))`
        header: What is the most precise **space** complexity of this algorithm? (:math:`n`
            is the size of the array)
        limit: 0
        type: multiple_choice
        name: Space Complexity
    invar1:
        header: What are the correct invariant for the first loop?
        choices:
        -   text: ':math:`1\leq i\leq n` '
            valid: true
        -   text: :math:`a[j]<a[n]`
        -   valid: true
            text: :math:`a[i..n]` :math:`is` :math:`sorted`
        -   text: if :math:`i < n` then :math:`a[1..i] \leq a[i+1]`
            valid: true
        -   text: :math:`a[1..i]` :math:`is` :math:`sorted`
        limit: 0
        multiple: true
        type: multiple_choice
        name: Invariant First Loop
    invar2:
        choices:
        -   text: :math:`a[1..i]` :math:`is` :math:`sorted`
        -   valid: true
            text: ':math:`1\leq i\leq n` '
        -   valid: true
            text: if :math:`i < n` then :math:`a[1..i] \leq a[i+1]`
        -   text: :math:`a[j]<a[n]`
        -   text: :math:`a[i..n]` :math:`is` :math:`sorted`
            valid: true
        -   text: :math:`a[1..j] \leq a[j]`
            valid: true
        -   text: :math:`1 \leq j \leq i`
            valid: true
        -   text: :math:`a[1..i] \leq a[i+1]`
        -   text: :math:`a[j..i]` :math:`is` :math:`sorted`
        name: Invariant Second Loop
        header: What are the correct invariant for the second loop?
        type: multiple_choice
        limit: 0
        multiple: true
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
